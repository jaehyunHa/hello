f3= function(x){1/9*x^2}
(p3<-integrate(f3, lower=1, upper=2))
7/27
#3)P(1<X<2)
f3= function(x){1/9*x^2}
(p3<-integrate(f3, lower=1, upper=2))
#p150
#9.
#평균
f=function(x){0.5*x*x}
(m=integrate(f, lower=0, upper=2))
#분산
f2=function(x){0.5*x^3}
(v=integrate(f2, lower=0, upper=2))
#10.
#1)확률그래프
x<-c(-1, 0, 1)
p<-c(1/4, 1/2, 1/4)
plot(x, p, type="h", lwd=5, col="blue")
#2)평균과 분산
(E_x<-sum(x*p))
(V_x<-sum(x^2*p)-E_x^2)
depression=read.table("depression_week.txt",header=T)
depression=read.table("depression_week.txt",header=T)
setwd("C:/미래신호")
depression=read.table("depression_week.txt",header=T)
barplot(t(depression),main='우울 요일별 버즈 현황',ylab='버즈비율',
ylim=c(0,100),col=rainbow(7),space=0.1,cex.axis=0.8,las=1,
names.arg=c('2012년','2013년','2014년','전체','범례'),cex=0.7)
legend(4.7,100,names(depression),cex=0.65,fill=rainbow(7))
savePlot("depression_week",type="png")
barplot(t(depression),main='우울 요일별 버즈 현황',ylab='버즈비율',
ylim=c(0,100),col=rainbow(7),space=0.1,cex.axis=0.8,las=2,
names.arg=c('2012년','2013년','2014년','전체','범례'),cex=0.7)
barplot(t(depression),main='우울 요일별 버즈 현황',ylab='버즈비율',
ylim=c(0,100),col=rainbow(7),space=0.1,cex.axis=0.8,las=1,
names.arg=c('2012년','2013년','2014년','전체','범례'),cex=0.7)
barplot(t(depression),main='우울 요일별 버즈 현황',ylab='버즈비율',
ylim=c(0,100),col=heat.colors(7),space=0.1,cex.axis=0.8,las=1,
names.arg=c('2012년','2013년','2014년','전체','범례'),cex=0.7)
legend(4.7,100,names(depression),cex=0.65,fill=heat.colors(7))
barplot(t(depression),main='우울 요일별 버즈 현황',ylab='버즈비율',
ylim=c(0,100),col=gray.colors(7),space=0.1,cex.axis=0.8,las=1,
names.arg=c('2012년','2013년','2014년','전체','범례'),cex=0.7)
legend(4.7,100,names(depression),cex=0.65,fill=gray.colors(7))
rm(list=ls())
depression=read.table("depression_year.txt",header=T)
depression=read.table("depression_year.txt",header=T)
barplot(t(depression),main='Depression(DSM5) Yearly buzz tracking',ylab='Buzz',
ylim=c(0,100),col=rainbow(9),space=0.1,cex.axis=0.8,las=1,
names.arg=c('2012Year','2013Year','2014Year','Total','Legend'),cex=0.7)
legend(4.7,100,names(depression),cex=0.65,fill=rainbow(9))
f=read.csv("depression_Symptom_freq.csv",sep=",",stringsAsFactors=F)
bp=barplot(f$Freqency, names.arg=f$Depression,main="Depression Symptom
buzz tracking",col=rainbow(31),xlim=c(0,12000),cex.names=0.7,
col.main=1,font.main=2,las=1,horiz=T)
f$Freqency
f$Depression
text(y=bp,x=f$Freqency*1,labels=paste(f$Freqency,'case'),
col='black',cex=0.5)
text(y=bp,x=f$Freqency*1,labels=paste(f$Freqency,'case'),
col='black',cex=3.5)
text(y=bp,x=f$Freqency*1,labels=paste(f$Freqency,'case'),
col='black',cex=0.8)
bp=barplot(f$Freqency, names.arg=f$Depression,main="Depression Symptom
buzz tracking",col=rainbow(31),xlim=c(0,12000),cex.names=0.7,
col.main=1,font.main=2,las=1,horiz=T)
text(y=bp,x=f$Freqency*1,labels=paste(f$Freqency,'case'),
col='black',cex=0.8)
#install.packages('catspec')
library(catspec)
#install.packages('foreign')
library(foreign)
data_spss=read.spss(file='depression_week.sav',
use.value.labels=T,use.missings=T,to.data.frame=T)
t1=ftable(data_spss[c('year','week')])
ctab(t1,type='r')
ctab(t1,type='c')
ctab(t1,type='r')
##  week의 total % 분석
tot=ftable(data_spss[c('week')])
ctab(tot,type='r')
rm(list=ls())
data_spss=read.table("depression_boxplot.txt",header=T)
data_spss=read.table("depression_boxplot.txt",header=T)
boxplot(data_spss$DSM_S,col='red',main=NULL)
title('Boxplot of Depression')
boxplot(data_spss$DSM_S,col='red', horizontal=T, main=NULL)
title('Boxplot of Depression')
boxplot(DSM_S~Channel,col='red',data=data_spss)
title('Boxplot of Channel~Depresion')
boxplot(DSM_S~Attitude,col='red',data=data_spss)
title('Boxplot of Attitude~Depresion')
install.packages('sp')
library(sp)
gadm=readRDS("KOR_adm0.rds")
gadm=readRDS("KOR_adm0.rds")
plot(gadm)
gadm=readRDS("KOR_adm1.rds")
plot(gadm)
windows(height=5.5, width=5)
gadm=readRDS("KOR_adm0.rds")
plot(gadm)
gadm=readRDS("KOR_adm1.rds")
plot(gadm)
gadm=readRDS("KOR_adm0.rds")
plot(gadm)
pop = read.table('depression_gadm.txt',header=T)
# gadm
pop_s = pop[order(pop$Code),]
inter=c(200,220,250,300,350,400,430,450)
pop_c=cut(pop_s$일차,breaks=inter)
gadm$pop=as.factor(pop_c)
# heat.colors, topo.colors, cm,colors, terrain.colors, rainbow, diverge.colors, gray.colors
col=rainbow(length(levels(gadm$pop)))
col=rev(heat.colors(length(levels(gadm$pop))))
col=gray.colors(length(levels(gadm$pop)))
spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
gadm=readRDS("KOR_adm1.rds")
spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
gadm$pop=as.factor(pop_c)
# heat.colors, topo.colors, cm,colors, terrain.colors, rainbow, diverge.colors, gray.colors
col=rainbow(length(levels(gadm$pop)))
col=rev(heat.colors(length(levels(gadm$pop))))
col=gray.colors(length(levels(gadm$pop)))
spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
pop_s
order(pop$Code)
pop_s
pop_c
gadm$pop=as.factor(pop_c)  is.factor(pop_c)
is.factor(pop_c)
# heat.colors, topo.colors, cm,colors, terrain.colors, rainbow, diverge.colors, gray.colors
col=rainbow(length(levels(gadm$pop)))
spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
col=rev(heat.colors(length(levels(gadm$pop))))
spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
## 2013년 우울지도
pop = read.table('depression_gadm.txt',header=T)
pop_s = pop[order(pop$Code),]
inter=c(200,240,260,310,360,510,530,550)
pop_c=cut(pop_s$이차,breaks=inter)
gadm$pop=as.factor(pop_c)
col=rev(heat.colors(length(levels(gadm$pop))))
spplot(gadm, 'pop', col.regions=col, main='2013년 지역별 청소년 우울 위험')
inter=c(200,230,340,380,410,450,480,520)
pop_c=cut(pop_s$삼차,breaks=inter)
gadm$pop=as.factor(pop_c)
col=rev(heat.colors(length(levels(gadm$pop))))
spplot(gadm, 'pop', col.regions=col, main='2014년 지역별 청소년 우울 위험')
pop_s = pop[order(pop$Code),]
inter=c(200,220,250,300,350,400,430,450)
pop_c=cut(pop_s$일차,breaks=inter)
gadm$pop=as.factor(pop_c)
col=rev(heat.colors(length(levels(gadm$pop))))
p1=spplot(gadm, 'pop', col.regions=col, main='2012년 지역별 청소년 우울 위험')
##  2013년
inter=c(200,240,260,310,360,510,530,550)
pop_c=cut(pop_s$이차,breaks=inter)
gadm$pop=as.factor(pop_c)
col=rev(heat.colors(length(levels(gadm$pop))))
p2=spplot(gadm, 'pop', col.regions=col, main='2013년 지역별 청소년 우울 위험')
##  2014년
inter=c(200,230,340,380,410,450,480,520)
pop_c=cut(pop_s$삼차,breaks=inter)
gadm$pop=as.factor(pop_c)
col=rev(heat.colors(length(levels(gadm$pop))))
p3=spplot(gadm, 'pop', col.regions=col, main='2014년 지역별 청소년 우울 위험')
##  여러 객체 인쇄
print(p1,pos=c(0, 0.5, 0.5, 1), more=T)
print(p2,pos=c(0.5, 0.5, 1, 1), more=T)
print(p3,pos=c(0, 0, 0.5, 0.5), more=T)
gadm=readRDS("KOR_adm2.rds")
plot(gadm)
gadm
#install.packages("arules")
library(arules)
#install.packages("dplyr")
library(dplyr)
#install.packages("igraph")
library(igraph)
asso=read.table('depression_Symptom_association_rule.txt',header=T)
asso
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.01,conf=0.63,target="rules"))
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
rules = labels(rules1, ruleSep="/", setStart="", setEnd="")
rules
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules = Filter(function(x){!any(x == "")},rules)
rules
rulemat = do.call("rbind", rules)
rulequality = quality(rules1)
ruleg = graph.edgelist(rulemat,directed=F)
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=0.8,
vertex.size=17, layout=layout.fruchterman.reingold.grid)
asso=read.table('depression_Symptom_association_rule.txt',header=T)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.01,conf=0.01,target="rules"))
rule_sub=subset(rules1,subset=rhs%pin% '학업스트레스' & lift>=4.5)
rules1=rule_sub
rules = labels(rules1, ruleSep="/", setStart="", setEnd="")
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules = Filter(function(x){!any(x == "")},rules)
rulemat = do.call("rbind", rules)
rulequality = quality(rules1)
ruleg = graph.edgelist(rulemat,directed=F)
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=1,
vertex.size=20,layout=layout.fruchterman.reingold.grid)
rulemat
rulemat[-c(1:16),]
rules1=apriori(trans,parameter=list(supp=0.01,conf=0.6,target="rules"))
#install.packages("arulesViz")
library(arulesViz)
plot(rules1, method='graph',control=list(type='items'))
rm(list=ls())
policy=read.csv("정책감정_그래프.csv",sep=",",stringsAsFactors=F)
a=policy$반대
b=policy$찬성
plot(a,xlab="",ylab="",ylim=c(0,120),type="o",axes=FALSE,ann=F,col=1)
title(main="2016년 보건복지 정책 감정(1-9월)",col.main=1,font.main=2)
#title(xlab="정책",col.lab=1)
title(ylab="버즈(%)",col.lab=1)
axis(1,at=1:18,lab=c(policy$정책),las=2)
axis(2,ylim=c(0,120),las=2)
lines(b,col=2,type="o", lty=2)
colors=c(1,2,4)
ITY=cbind(lty=1, lty=2,lty=3)
legend(13,120,c("반대","찬성","평균"),cex=0.9,col=colors,lty=ITY,lwd=2)
abline(h=12.7,lty=3, col=4, lwd=0.5)
abline(h=87.3,lty=3, col=4, lwd=0.5)
policy=read.csv("정책감정_그래프_13.csv",sep=",",stringsAsFactors=F)
a=policy$반대
b=policy$찬성
plot(a,xlab="",ylab="",ylim=c(0,120),type="o",axes=FALSE,ann=F,col=1)
title(main="2016년 보건복지 정책 감정(1-3월)",col.main=1,font.main=2)
#title(xlab="정책",col.lab=1)
title(ylab="버즈(%)",col.lab=1)
axis(1,at=1:18,lab=c(policy$정책),las=2)
axis(2,ylim=c(0,120),las=2)
lines(b,col=2,type="o")
colors=c(2,1)
legend(13,120,c("반대","찬성"),cex=0.9,col=colors,lty=1,lwd=2)
abline(h=12.8,lty=1, col=4, lwd=0.5)
abline(h=87.2,lty=1, col=4, lwd=0.5)
rm(list=ls())
policy=read.csv("정책감정_그래프_79.csv",sep=",",stringsAsFactors=F)
a=policy$반대
b=policy$찬성
plot(a,xlab="",ylab="",ylim=c(0,120),type="o",axes=FALSE,ann=F,col=1)
title(main="2016년 보건복지 정책 감정(7-9월)",col.main=1,font.main=2)
#title(xlab="정책",col.lab=1)
title(ylab="버즈(%)",col.lab=1)
axis(1,at=1:18,lab=c(policy$정책),las=2)
axis(2,ylim=c(0,120),las=2)
lines(b,col=2,type="o")
colors=c(2,1)
legend(13,120,c("반대","찬성"),cex=0.9,col=colors,lty=1,lwd=2)
abline(h=12.0,lty=1, col=4, lwd=0.5)
abline(h=88.0,lty=1, col=4, lwd=0.5)
#install.packages("wordcloud")
library(wordcloud)
key=c('관심','마련','최고','진행','참여','다양','운영','실현','행복','노력','소중','지원','가능',
'계획','확대','시행','최우선','발표','증가','필요','도움','추진')
freq=c(12777,8471,6570,16180,10116,11445,14545,3757,9318,242,22696,18572,5632,12821,
9798,726,6439,4443,21242,9930,10306)
library(RColorBrewer)
palete=brewer.pal(9,"Set1")
wordcloud(key,freq,scale=c(5,0.5),rot.per=.12,min.freq=5,random.order=F,random.color=T,colors=palete)
key=c('부족','무시','반대','지적','부담','억울','비판','논란','문제','어려움','규제')
freq=c(3011,2451,7633,4065,6055,236,3535,4180,14794,4078,1029)
wordcloud(key,freq,scale=c(5,0.5),rot.per=.12,min.freq=5,random.order=F,random.color=T,colors=palete)
# TF wordcolud
#
#정책, 이슈
key=c('행복한노후','국민연금','기초연금','보육','결혼출산','가족친화',
'미래세대육성','의료민영화','무상정책','건강보험','원격의료','중증질환',
'환자안전','보건산업','복지급여','건강증진','일자리','의료비','자살',
'등록금','세금','개인정보','부동산','양극화','치료','담배','증세')
freq=c(964,2892,2433,5550,15720,1436,2095,1943,2869,5458,1808,696,
891,4286,20006,14691,27845,2545,2003,1445,13050,1947,1893,1005,
11114,1788,20736)
wordcloud(key,freq,scale=c(3,0.5),rot.per=.12,min.freq=5,random.order=F,
random.color=T,colors=palete)
freq=c(333,1100,1205,1919,4330,468,1214,680,1396,554,372,309,1266,6986,3976,10390,1122,
701,525,6543,894,724,314,3769,488,10049)
wordcloud(key,freq,scale=c(3,0.5),rot.per=.12,min.freq=5,random.order=F,random.color=T,colors=palete)
rm(list=ls())
data_spss=read.table(file="미래정책_DoV.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,10000), ylim=c(-0.3,1.0), pch=18 ,
col=8,xlab='average_term_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Emergence Map')
text(data_spss$tf,data_spss$df,label=data_spss$정책,cex=0.8, col='red')
abline(h=0.093, v=811, lty=1, col=4, lwd=0.5)
rm(list=ls())
data_spss=read.table(file="미래정책_DoD.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,6000), ylim=c(-0.4,1.5), pch=18 ,
col=8,xlab='average_document_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Issue Map')
text(data_spss$tf,data_spss$df,label=data_spss$정책,cex=0.8, col='red')
abline(h=0.037, v=517, lty=1, col=4, lwd=0.5)
rm(list=ls())
data_spss=read.table(file="미래정책_DoV.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,10000), ylim=c(-0.3,1.0), pch=18 ,
col=8,xlab='평균단어빈도', ylab='평균증가율',
main='Keyword Emergence Map')
text(data_spss$tf,data_spss$df,label=data_spss$정책,cex=0.8, col='red')
abline(h=0.093, v=811, lty=1, col=4, lwd=0.5)
savePlot('미래정책국문_DoV',type='png')
#install.packages("randomForest")
library(randomForest)
tdata = read.table('c:/미래신호_2부1장/보건복지_random_정책.txt',header=T)
tdata = read.table('보건복지_random_정책.txt',header=T)
tdata.rf = randomForest(Attitude~., data=tdata,forest=FALSE,importance=TRUE)
tdata = read.table('보건복지_random_정책.txt',header=T)
varImpPlot(tdata.rf, main='Random forest importance plot')
asso=read.table('보건복지_association_정책.txt',header=T)
library(arules)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.01,conf=0.5), appearance=list(rhs=c("찬성", "반대"),
default="lhs"),control=list(verbose=F))
inspect(sort(rules1))
asso=read.table('보건복지_association_정책.txt',header=T)
library(arules)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.01,conf=0.5), appearance=list(rhs=c("찬성", "반대"),
default="lhs"),control=list(verbose=F))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
rule_sub=subset(rules1,subset=confidence>=0.6)
inspect(sort(rule_sub,by="lift"))
asso=read.table('보건복지_association_정책이슈.txt',header=T)
library(arules)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.002,conf=0.45,target="rules"))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
#install.packages("dplyr")
library(dplyr)
#install.packages("igraph")
library(igraph)
rules = labels(rules1, ruleSep="/", setStart="", setEnd="")
rules
rules1
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules
rules = Filter(function(x){!any(x == "")},rules)
rules
rulemat = do.call("rbind", rules)
rulemat
rulequality = quality(rules1)
rulequality
ruleg = graph.edgelist(rulemat,directed=F)
ruleg
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
ruleg
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=1, vertex.size=20,
layout=layout.fruchterman.reingold.grid)
#install.packages('MASS')
library(MASS)
#install.packages("arulesViz")
library(arulesViz)
plot(rules1, method='graph',control=list(type='items'))
plot(rules1, method='paracoord',control=list(reorder=T))
plot(rules1, method='grouped')
key=c('객관성','경쟁력강화','경제성장','경제혁신','경제협력','극대화','급등','급증',
'데이터화','맞춤형서비스','맞춤형제약기술','무인화','부각','상호연결성','상호연동',
'속보성','신산업창조','신성장','인프라구축','일자리창출','자동접속','자동화','절감',
'정보보호','정확성','증가','증대','차별화','초감각적지각','확산')
freq=c(226,4156,4172,1892,2066,4288,3418,5306,122,941,7,175,3978,33,113,12,235,3529,
4063,8275,9,2529,5607,3497,777,18474,4628,4656,5,14990)
library(RColorBrewer)
palete=brewer.pal(9,"Set1")
windows(height=5.5, width=5)
wordcloud(key,freq,scale=c(3,0.5),rot.per=.10,min.freq=5,random.order=F,
random.color=T,colors=palete)
rm(list=ls())
data_spss=read.table(file="미래ICT_DoV_T.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,18000), ylim=c(-0.5,3), pch=18 ,
col=8,xlab='average_term_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Emergence Map')
text(data_spss$tf,data_spss$df,label=data_spss$ICT,cex=0.8, col='red')
abline(h=-0.039, v=671, lty=1, col=4, lwd=0.5)
rm(list=ls())
data_spss=read.table(file="미래ICT_DoD_T.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,6500), ylim=c(-0.4,2), pch=18 ,
col=8,xlab='average_document_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Issue Map')
text(data_spss$tf,data_spss$df,label=data_spss$ICT,cex=0.8, col='red')
abline(h=-0.074, v=407, lty=1, col=4, lwd=0.5)
rm(list=ls())
tdata = read.table('ICT_ransomforest.txt',header=T)
rm(list=ls())
asso=read.table(file='ICT_association.txt',header=T)
#install.packages("arules")
library(arules)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.001,conf=0.1),
appearance=list(rhs=c("Consumer", "Provider"), default="lhs")
,control=list(verbose=F))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
rule_sub=subset(rules1,subset=rhs%pin% 'Provider'
& confidence>=0.59)
inspect(sort(rule_sub,by="lift"))
rule_sub=subset(rules1,subset=rhs%pin% 'Consumer'
& confidence>=0.27)
rules = labels(rule_sub, ruleSep="/", setStart="", setEnd="")
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules = Filter(function(x){!any(x == "")},rules)
rulemat = do.call("rbind", rules)
rulequality = quality(rules1)
ruleg = graph.edgelist(rulemat,directed=F)
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=1,
vertex.size=20, layout=layout.fruchterman.reingold.grid)
rhs
rm(list=ls())
data_spss=read.table(file="비만_DoV.txt",header=T)
windows(height=5.5, width=5)
plot(data_spss$tf,data_spss$df,xlim=c(0,25000), ylim=c(-0.3,0.7), pch=18 ,
col=8,xlab='average_term_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Emergence Map')
text(data_spss$tf,data_spss$df,label=data_spss$정책,cex=0.8, col='red')
abline(h=0.033, v=1879, lty=1, col=4, lwd=0.5)
data_spss=read.table(file="비만_DoD.txt",header=T)
plot(data_spss$tf,data_spss$df,xlim=c(0,18000), ylim=c(-0.3,0.7), pch=18 ,
col=8,xlab='average_document_frequency', ylab='time_weighted_increasing_rate',
main='Keyword Issue Map')
text(data_spss$tf,data_spss$df,label=data_spss$정책,cex=0.8, col='red')
abline(h=0.018, v=1879, lty=1, col=4, lwd=0.5)
gc()
tdata = read.table('비만_randomforest.txt',header=T)
asso=read.table('비만_연관규칙_키워드.txt',header=T)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.001,conf=0.968,target="rules"))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
#install.packages("dplyr")
library(dplyr)
#install.packages("igraph")
library(igraph)
#install.packages("arules")
library(arules)
asso=read.table('비만_연관규칙_키워드.txt',header=T)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.001,conf=0.974,target="rules"))
inspect(sort(rules1))
rules = labels(rules1, ruleSep="/", setStart="", setEnd="")
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules = Filter(function(x){!any(x == "")},rules)
rulemat = do.call("rbind", rules)
rulequality = quality(rules1)
ruleg = graph.edgelist(rulemat,directed=F)
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=1,
vertex.size=20, layout=layout.fruchterman.reingold.grid)
asso=read.table('비만_연관규칙_키워드종속변수.txt',header=T)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.001,conf=0.82),
appearance=list(rhs=c("실패", "성공"),
default="lhs"),control=list(verbose=F))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
asso=read.table('비만_연관규칙_키워드종속변수.txt',header=T)
trans=as.matrix(asso,"Transaction")
rules1=apriori(trans,parameter=list(supp=0.001,conf=0.82),
appearance=list(rhs=c("실패", "성공"),
default="lhs"),control=list(verbose=F))
inspect(sort(rules1))
summary(rules1)
rules.sorted=sort(rules1, by="confidence")
inspect(rules.sorted)
rules.sorted=sort(rules1, by="lift")
inspect(rules.sorted)
rules = labels(rules1, ruleSep="/", setStart="", setEnd="")
rules = sapply(rules, strsplit, "/",  USE.NAMES=F)
rules = Filter(function(x){!any(x == "")},rules)
rulemat = do.call("rbind", rules)
rulequality = quality(rules1)
ruleg = graph.edgelist(rulemat,directed=F)
ruleg = graph.edgelist(rulemat[-c(1:16),],directed=F)
plot.igraph(ruleg, vertex.label=V(ruleg)$name, vertex.label.cex=1,
vertex.size=20, layout=layout.fruchterman.reingold.grid)
